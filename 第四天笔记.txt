学习用时：3个小时
学习目标：零基础学院-第四天:让背景边框列表链接和更复杂的选择器
目标是否达成：已达成
学习验证：
1、背景，边框，列表、连接的相关属性
背景：background :#00FF00 url(bgimage.gif) no-repeat fixed top;
实例：
background-color	规定要使用的背景颜色。
	body
  {
  background-color:yellow;
  }
h1
  {
  background-color:#00ff00;
  }
p
  {
  background-color:rgb(255,0,255);
  }

background-position	规定背景图像的位置。
	可能的值：
                 关键字：top、center等；X%、Y%；可用XPX、YPX

background-size:80px 60px;规定背景图片的尺寸。
	
background-repeat	规定如何重复背景图像。
repeat：重复，repeat-x，横向重复，repeat-y纵向重复，no-repeat不重复
			
background-attachment  规定背景图像是否固定或者随着页面的其余部分滚动。
实例：
body 
  { 
  background-image: url(bgimage.gif); 
  background-attachment: fixed;
  }
soroll：默认值，背景图像会随着页面其余部分的滚动而移动。fixed	：当页面的其余部分滚动时，背景图像不会移动。inherit：规定应该从父元素继承 background-attachment 属性的设置。

background-image	规定要使用的背景图像。
	实例：
body
  { 
  background-image: url(bgimage.gif);
  background-color: #000000;
  }
inherit 规定应该从父元素继承 background 属性的设置。

边框：border:5px solid red;四个边框为实线，宽为5像素的红色边框
border-width：thin medium thick 10px;上边框是细边框，右边框是中等边框，下边框是粗边框，左边框是 10px 宽的边框
border-style：border-style:dotted solid double dashed; 上边框是点状，右边框是实线，下边框是双线，左边框是虚线
border-color：border-color:dotted red green;上边框和下边框是红色，右边框和左边框是绿色

列表
要修改用于列表项的标志类型，可以使用属性 list-style-type：disc实心圆|circle空心圆|square实心方块|decimal数字
对各标志使用一个图像：list-style-image : url(xxx.gif)
设置在何处放置列表项标记：list-style-position ：inside文本以外|outside默认|inherit继承
简写列表样式：li {list-style : url(example.gif) square inside}

连接
a:link - 普通的、未被访问的链接
a:visited - 用户已访问的链接
a:hover - 鼠标指针位于链接的上方
a:active - 链接被点击的时刻

CSS 各种选择器的概念，使用方法及使用场景
元素选择器：最常见的 CSS 选择器是元素选择器，也称为类型选择器，换句话说，文档的元素就是最基本的选择器。如果设置 HTML 的样式，选择器通常将是某个 HTML 元素，比如 p、h1、em、a，甚至可以是 html 本身：
html {color:black;}
h1 {color:blue;}
h2 {color:silver;}

ID选择器：id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。id 选择器以 "#" 来定义。，ID 选择器会使用一次，而且仅一次。

派生选择器：派生选择器允许你根据文档的上下文关系来确定某个标签的样式。通过合理地使用派生选择器，我们可以使 HTML 代码变得更加整洁。

后代选择器：后代选择器可以选择作为某元素后代的元素。
子元素选择器：只能选择作为某元素子元素的元素。
相邻兄弟选择器：可选择紧接在另一元素后的元素，且二者有相同父元素。

属性选择器：对带有指定属性的 HTML 元素设置样式。可以为拥有指定属性的 HTML 元素设置样式，而不仅限于 class 和 id 属性。
下面的例子为 title="W3School" 的所有元素设置样式：
[title=W3School]
{
border:5px solid blue;
}

CSS 选择器的优先级
当两个规则都作用到了同一个html元素上时，如果定义的属性有冲突，那么应该用谁的值的，CSS有一套优先级的定义。
      总结排序：!important > 行内样式>ID选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性
CSS优先级：是由四个级别和各级别的出现次数决定的。

　　四个级别分别为：行内选择符、ID选择符、类别选择符、元素选择符。

　　优先级的算法：

　　每个规则对应一个初始"四位数"：0、0、0、0

　　若是 行内选择符，则加1、0、0、0

　　若是 ID选择符，则加0、1、0、0

　　若是 类选择符/属性选择符/伪类选择符，则分别加0、0、1、0

　　若是 元素选择符/伪元素选择符，则分别加0、0、0、1
算法：将每条规则中，选择符对应的数相加后得到的”四位数“，从左到右进行比较，大的优先级越高。　　

需注意的：
　　①、!important的优先级是最高的，但出现冲突时则需比较”四位数“;

　　②、优先级相同时，则采用就近原则，选择最后出现的样式;

　　③、继承得来的属性，其优先级最低;

　　!important > 行内样式>ID选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性。

